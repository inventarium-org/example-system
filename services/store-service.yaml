version: v0

# You need to provide only name and key fields, everything else can be empty
# For example, if you don't have documentation or environments you can add it later

# required
name: Store service
# required, should be unique for each service
key: store-service
description: Service with all information about orders
languages:
  - ruby
repository_link: https://github.com/somecompany/store
tags:
  - items
  - accounts
  - orders

owner:
  team_or_developer_name: Orders team
  slack_channel: '#orders-eng'

service:
  # optional, can be (critical | normal | internal | experiment)
  classification: critical
  # optional, can be (adopt | hold | trial | in_development)
  status: hold

docs:
  api: https://api-docs.somecompany.net/store-service
  maintenance: https://github.com/somecompany/store/tree/master/docs
  domain: https://confluence.com/somecompany/orders-and-items

# You can add any count of environments and you can use any names instead production, like stage, demo, etc
environments:
  production:
    url: https://store.somecompany.com
    healthcheck_url: https://store.somecompany.com/health
    logs_url: https://logs.somecompany.net/store
    error_tracker_url: https://rollbar.com/somecompany/store
    monitoring:
      grafana: https://grafana.somecompany.net/store

  stage:
    url: https://store.somecompany-stage.net
    healthcheck_url: https://store.somecompany-sgate.net/health
    logs_url: https://logs.somecompany-stage.net/store
    error_tracker_url: https://rollbar.com/somecompany/store

  dev:
    url: https://store.somecompany-dev.net
    healthcheck_url: https://store.somecompany-dev.net/health
    logs_url: https://logs.somecompany-dev.net/store
    error_tracker_url: https://rollbar.com/somecompany/store

operations:
  ci_build_url: https://jenkins.somecompany.net/store-service

communications:
    # type is reqired, can be (http | rpc | graphql | event-producer | event-consumer)
  - type: event-consumer
    # reqired, can be anything like (service key | kafka | rabbitmq | etc)
    target: kafka
    # optional, can be (critical | uncritical)
    criticality: critical
    # optional list, can be (topic name | queue name | rpc resource | rest resource | gqlschema name)
    resources:
      - items-topic
      - account-topic
