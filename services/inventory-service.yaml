version: v0

# You need to provide only name and key fields, everything else can be empty
# For example, if you don't have documentation or environments you can add it later

# required
name: Inventory service
# required, should be unique for each service
key: inventory-service
description: Service with information about all items in the system
languages:
  - java
repository_link: github.com/somecompany/inventory
tags:
  - items

owner:
  team_or_developer_name: Orders team
  slack_channel: '#orders-eng'

service:
  # optional, can be (critical | normal | internal | experiment)
  classification: normal
  # optional, can be (adopt | hold | trial | in_development)
  status: trial

docs:
  api: https://api-docs.somecompany.net/inventory-service
  maintenance: https://github.com/somecompany/inventory/tree/master/docs
  domain: https://confluence.com/somecompany/orders-and-items

# You can add any count of environments and you can use any names instead production, like stage, demo, etc
environments:
  production:
    url: https://inventory.somecompany.com
    healthcheck_url: https://inventory.somecompany.com/health
    logs_url: https://logs.somecompany.net/inventory
    error_tracker_url: https://rollbar.com/somecompany/inventory
    monitoring:
      grafana: https://grafana.somecompany.net/inventory

  stage:
    url: https://inventory.somecompany-stage.net
    healthcheck_url: https://inventory.somecompany-sgate.net/health
    logs_url: https://logs.somecompany-stage.net/inventory
    error_tracker_url: https://rollbar.com/somecompany/inventory

  dev:
    url: https://inventory.somecompany-dev.net
    healthcheck_url: https://inventory.somecompany-dev.net/health
    logs_url: https://logs.somecompany-dev.net/inventory
    error_tracker_url: https://rollbar.com/somecompany/inventory

operations:
  ci_build_url: https://jenkins.somecompany.net/inventory-service

communications:
    # type is reqired, can be (http | rpc | graphql | event-producer | event-consumer)
  - type: event-producer
    # reqired, can be anything like (service key | kafka | rabbitmq | etc)
    target: kafka
    # optional, can be (critical | uncritical)
    criticality: critical
    # optional list, can be (topic name | queue name | rpc resource | rest resource | gqlschema name)
    resources:
      - items-topic

    # type is reqired, can be (http | rpc | graphql | event-producer | event-consumer)
  - type: event-consumer
    # reqired, can be anything like (service key | kafka | rabbitmq | etc)
    target: kafka
    # optional, can be (critical | uncritical)
    criticality: critical
    # optional list, can be (topic name | queue name | rpc resource | rest resource | gqlschema name)
    resource:
      - etl-topic
